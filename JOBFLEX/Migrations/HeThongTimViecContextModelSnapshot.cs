// <auto-generated />
using System;
using HeThongTimViec.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JOBFLEX.Migrations
{
    [DbContext(typeof(HeThongTimViecContext))]
    partial class HeThongTimViecContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HeThongTimViec.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("application_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    b.Property<DateTime>("NgayUngTuyen")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_ung_tuyen");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("trang_thai");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ApplicationId");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("applications", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BusinessId"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("dia_chi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("GiayPhepKinhDoanh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("giay_phep_kinh_doanh");

                    b.Property<string>("MaSoThue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ma_so_thue");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<string>("QuyMo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("quy_mo");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenDoanhNghiep")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ten_doanh_nghiep");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("trang_thai");

                    b.HasKey("BusinessId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GiayPhepKinhDoanh")
                        .IsUnique();

                    b.HasIndex("MaSoThue")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.HasIndex("SDT")
                        .IsUnique();

                    b.ToTable("businesses", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.BusinessMember", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tinh_trang");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("MemberId");

                    b.HasIndex("UserId");

                    b.HasIndex("BusinessId", "UserId")
                        .IsUnique();

                    b.ToTable("business_members", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.CV", b =>
                {
                    b.Property<int>("CvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cv_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CvId"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file_path");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CvId");

                    b.HasIndex("UserId");

                    b.ToTable("CV", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.JobPost", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JobId"));

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<string>("LinhVuc")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("linh_vuc");

                    b.Property<string>("LoaiCv")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("loai_cv");

                    b.Property<decimal>("Luong")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("luong");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("mo_ta");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_dang");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_het_han");

                    b.Property<string>("ThanhPho")
                        .HasColumnType("longtext")
                        .HasColumnName("thanh_pho");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tieu_de");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("trang_thai");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("JobId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("UserId");

                    b.ToTable("job_posts", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.JobSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("GioBatDau")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("gio_bat_dau");

                    b.Property<string>("GioKetThuc")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("gio_ket_thuc");

                    b.Property<int>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    b.Property<string>("Thu")
                        .HasColumnType("longtext")
                        .HasColumnName("thu");

                    b.HasKey("ScheduleId");

                    b.HasIndex("JobId");

                    b.ToTable("job_schedules", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_gui");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("noi_dung");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiver_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.HasKey("MessageId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_tao");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("noi_dung");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("trang_thai");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("NotificationId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("UserId");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.PasswordReset", b =>
                {
                    b.Property<int>("PasswordResetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("password_reset_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PasswordResetId"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expiry_date");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("PasswordResetId");

                    b.HasIndex("UserId");

                    b.ToTable("password_resets", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ly_do");

                    b.Property<DateTime>("NgayBaoCao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_bao_cao");

                    b.Property<int?>("ReportedId")
                        .HasColumnType("int")
                        .HasColumnName("reported_id");

                    b.Property<int?>("ReporterId")
                        .HasColumnType("int")
                        .HasColumnName("reporter_id");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("trang_thai");

                    b.HasKey("ReportId");

                    b.HasIndex("JobId");

                    b.HasIndex("ReportedId");

                    b.HasIndex("ReporterId");

                    b.ToTable("reports", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.SavedJob", b =>
                {
                    b.Property<int>("SavedJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("saved_job_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SavedJobId"));

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    b.Property<DateTime>("NgayLuu")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_luu");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SavedJobId");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("saved_jobs", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FacebookLink")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("facebook_link");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("gioi_tinh");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Ho_ten");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mat_khau");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Mo_ta");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date")
                        .HasColumnName("Ngay_sinh");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("Ngay_tao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SDT");

                    b.Property<string>("ThanhPho")
                        .HasColumnType("longtext")
                        .HasColumnName("thanh_pho");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("Chấp thuận")
                        .HasColumnName("trang_thai");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vai_tro");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FacebookLink")
                        .IsUnique();

                    b.HasIndex("SDT")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.WorkAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ngay")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ngay");

                    b.Property<string>("ThoiGian")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("thoi_gian");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("work_availabilities", (string)null);
                });

            modelBuilder.Entity("HeThongTimViec.Models.Application", b =>
                {
                    b.HasOne("HeThongTimViec.Models.JobPost", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.Business", b =>
                {
                    b.HasOne("HeThongTimViec.Models.User", "Owner")
                        .WithMany("OwnedBusinesses")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("HeThongTimViec.Models.BusinessMember", b =>
                {
                    b.HasOne("HeThongTimViec.Models.Business", "Business")
                        .WithMany("Members")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("BusinessMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.CV", b =>
                {
                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("CVs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.JobPost", b =>
                {
                    b.HasOne("HeThongTimViec.Models.Business", "Business")
                        .WithMany("JobPosts")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("JobPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Business");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.JobSchedule", b =>
                {
                    b.HasOne("HeThongTimViec.Models.JobPost", "Job")
                        .WithMany("Schedules")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HeThongTimViec.Models.Message", b =>
                {
                    b.HasOne("HeThongTimViec.Models.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HeThongTimViec.Models.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("HeThongTimViec.Models.Notification", b =>
                {
                    b.HasOne("HeThongTimViec.Models.Business", "Business")
                        .WithMany("Notifications")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Business");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.PasswordReset", b =>
                {
                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("PasswordResets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.Report", b =>
                {
                    b.HasOne("HeThongTimViec.Models.JobPost", "Job")
                        .WithMany("Reports")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HeThongTimViec.Models.User", "Reported")
                        .WithMany("ReportsReceived")
                        .HasForeignKey("ReportedId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HeThongTimViec.Models.User", "Reporter")
                        .WithMany("ReportsMade")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Job");

                    b.Navigation("Reported");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("HeThongTimViec.Models.SavedJob", b =>
                {
                    b.HasOne("HeThongTimViec.Models.JobPost", "Job")
                        .WithMany("SavedByUsers")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("SavedJobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.WorkAvailability", b =>
                {
                    b.HasOne("HeThongTimViec.Models.User", "User")
                        .WithMany("WorkAvailabilities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeThongTimViec.Models.Business", b =>
                {
                    b.Navigation("JobPosts");

                    b.Navigation("Members");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("HeThongTimViec.Models.JobPost", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Reports");

                    b.Navigation("SavedByUsers");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("HeThongTimViec.Models.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("BusinessMemberships");

                    b.Navigation("CVs");

                    b.Navigation("JobPosts");

                    b.Navigation("Notifications");

                    b.Navigation("OwnedBusinesses");

                    b.Navigation("PasswordResets");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("ReportsMade");

                    b.Navigation("ReportsReceived");

                    b.Navigation("SavedJobs");

                    b.Navigation("SentMessages");

                    b.Navigation("WorkAvailabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
